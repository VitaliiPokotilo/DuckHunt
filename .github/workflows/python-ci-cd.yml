name: Python CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]  # Запускати при змінах у цих гілках
  pull_request:
    branches: [ "main", "develop" ]  # Запускати для PR у ці гілки

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]  # Тестувати на різних версіях Python

    steps:
      - uses: actions/checkout@v4  # Завантажити код

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Встановити залежності
          pip install pytest pytest-cov  # Для тестування

      - name: Run tests
        run: pytest --cov=./ --cov-report=xml  # Запустити тести з coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3  # Відправити coverage на Codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Додайте токен у Secrets репозиторію

  lint:
    runs-on: ubuntu-latest
    needs: test  # Чекати на завершення тестів
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          pip install black flake8 mypy

      - name: Check formatting (Black)
        run: black --check .

      - name: Lint with Flake8
        run: flake8 .

      - name: Type checking (mypy)
        run: mypy .